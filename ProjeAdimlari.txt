1 => Öncelikler katmanlarımızı (Project.ENTITIES, Project.MAP,Project.DAL,Project.BLL katmanlarını) class library (.Net Framework) olarak acıyoruz (Solution'imiza sag tıklayıp Add New Project diyerek)...UI katmanını hangi display'de istiyorsanız o platformda acmalısınız...Bizim burada kullandıgımız Display Windows Form App. olarak secilmiştir...

Class Library olan projeleriniz calısabilecek projeler degildir... Bu projeler ilgili yapı canlıya cıktıgı zaman DLL'e dönüsüp calısabilecek durumda olan projenin icerisine eklenen dosyalardır...Sizin calısabilecek tek yapınız UI katmanıdır...Bu yüzden hemen UI katmanımız olan projeyi Set As StartupProject olarak ayarlamalısınız...


N-Tier

----Entities Katmanı------
*Veritabanında tabloya dönüsecek olan sınıflarımızı ve enum'larımızı, varsa Interface'lerimizi icerecek olan katmandır

-----MAP Katmanı-----

*Veritabanı ayarlamalarınızı hazır bulundurup DAL'e göndecek katmandır


---DAL Katmanı----

*Veritabanınız ile haberlesecek ve veritabanınızın olusmasını saglayacak katmandır...


---BLL Katmanı---
*İş akışınızı belirleyecek olan katmandır


---UI Katmanı---
*Kullanıcının etkileşime gececegi projeyi olusturan katmandır



----Sıra-----

1 => Önce ENtities'e baslıyoruz...Entities katmanında veritabanında tablo olacak sınıflarımızın tasarlanması lazım...

2 => Map katmanına geciyoruz...Map katmanında Veritabanı ayarlamaları yapacagımız icin Entity Framework'un bu katmana indirilmesi lazım...Bütün ayarlama işlemleri Entity Framework'ten gelir... Aynı zamanda bu Katman Entities katmanındaki class'ları kullanmak istedigi icin Entities katmanından referans alır... İlgili referanslar alındıktan sonra MAP class'larımız acılıyor...

3 => DAL katmanında EF indirdik... Entities ve Map katmanlarından referans aldık. Tam bu sırada Set as Startup olarak ayarlanmıs UI katmanımıza da  EF indirdik... Ve oranın (WinUI'in) app.config'ine adresimizi yazdık...Bu projeler icerisinde Set as startup olarak ayarlanmıs olan projemizin config dosyası görüleceginden dolayı DAL katmanında Context sınıfımızın constructor'indan ulasacagımız DbContext sınıfının constructor'ina rahatca config dosyamız ismini verebildik...(Burada dikkat etmeniz gereken nokta kullanacagınız config dosyasının set as startup olarak ayarlanmıs katmanda bulunması...Bu bizim icin UI katmanıdır...) Sonra test icin Package Manager Console'u actık...BUrada dikkat etmeniz gereken şey Console'un hedefledigi projenin Context sınıfını iceren katman olması gerekliligidir...

4 => BLL katmanına geciyoruz... EF indiriyoruz...Ve DAL katmanı ile ENTITIES katmanından referans alıyoruz...Sonra Singleton Pattern'imizi yaratıyoruz...Sonra Generic Repository'e geciyoruz...

